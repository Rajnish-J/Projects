Did you notice the following flow for the game?

There are 3 rounds in the game
For each round - the following steps happen
  We first take the user option
      We check whether the user has given the correct option. If the option is incorrect, we prompt the user to give the correct option
We generate a random option for the computer
We compare the user option to the option generated by the computer
We update the score for the round
At the end of the 3 rounds, we declare the overall winner

----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Let us think of the logic in detail - step by step

We first take the user option
We check whether the user has given the correct option. If the option is incorrect, we prompt the user to give the correct option

* Ask the user for their input - it has to be one of rock, paper or scissors
* Store the input in a string
* While storing the input, convert all characters to lower case to handle the rock, Rock, RoCK like inputs
* Compare and check if the input is anything other than rock, paper or scissors - give an error message and ask for user input again
If input is valid - then execute remaining code

----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Next steps

We compare the user option to the option generated by the computer
We update the score for the round

If user option = computer option
Then the round is a tie, no change in score for the round
Else if user option is rock when computer option is paper or user option is paper when computer option is scissor or user option is scissor when computer option is rock
Then computer wins this round and increase computer score by 1
Else in all other cases
User wins this round and increase user score by 1

----------------------------------------------------------------------------------------------------------------------------------------------------------------------

